#!/usr/bin/env node
// @flow

const fs = require('fs')
const fsp = fs.promises
const path = require('path')

const sampleFlow = fs.readFileSync(path.join(__dirname, 'tdlib.js.flow.sample'))
  .toString()
const sampleTs = fs.readFileSync(path.join(__dirname, 'tdlib.d.ts.sample'))
  .toString()

const autoGeneratedStr = '// AUTOGENERATED\n'

async function copy (pkg, converter/*: string => string */) {
  const pathFlow = path.join(__dirname, 'packages', pkg, 'index.js.flow')
  const pathTs = path.join(__dirname, 'packages', pkg, 'index.d.ts')
  const outputFlow = autoGeneratedStr + converter(sampleFlow)
  const outputTs = autoGeneratedStr + converter(sampleTs)
  await Promise.all([
    fsp.writeFile(pathFlow, outputFlow),
    fsp.writeFile(pathTs, outputTs)
  ])
}

// copy('tdl-tdlib-addon', inp => inp.replace(
//   'constructor()',
//   'constructor(libraryFile?: string, addonPath?: string)'))

copy('tdl-tdlib-ffi', inp => inp.replace(
  'constructor()',
  'constructor(libraryFile?: string)'))

copy('tdl-tdlib-wasm', inp => inp.replace(
  'constructor()',
  'constructor(module: any)'))
